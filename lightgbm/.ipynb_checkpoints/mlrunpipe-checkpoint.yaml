"apiVersion": |-
  argoproj.io/v1alpha1
"kind": |-
  Workflow
"metadata":
  "annotations":
    "pipelines.kubeflow.org/pipeline_spec": |-
      {"description": "Shows how to use mlrun.", "inputs": [{"default": "[0.1, 0.2]", "name": "learning_rate"}, {"default": "[30, 31]", "name": "num_leaves"}], "name": "LGBMClassifier training pipeline"}
  "generateName": |-
    lgbmclassifier-training-pipeline-
"spec":
  "arguments":
    "parameters":
    - "name": |-
        learning_rate
      "value": |-
        [0.1, 0.2]
    - "name": |-
        num_leaves
      "value": |-
        [30, 31]
  "entrypoint": |-
    lgbmclassifier-training-pipeline
  "serviceAccountName": |-
    pipeline-runner
  "templates":
  - "container":
      "command":
      - |-
        python
      - |-
        -m
      - |-
        mlrun
      - |-
        deploy
      - |-
        {'kind': 'remote', 'metadata': {'name': 'higgs-serving'}, 'spec': {'command': '', 'args': [], 'image': '', 'mode': '', 'description': '', 'volumes': [{'volume': {'flexVolume': {'driver': 'v3io/fuse', 'options': {'accessKey': '4a5eabdc-0814-489e-9fdf-6ad2fa5df31d', 'container': 'users', 'subPath': '/admin'}}, 'name': 'fs'}, 'volumeMount': {'name': 'fs', 'mountPath': 'User'}}], 'env': {'TRANSPORT_PROTOCOL': 'seldon', 'ENABLE_EXPLAINER': 'False', 'MODEL_CLASS': 'LGBoostModel', 'V3IO_FRAMESD': 'framesd.default-tenant.svc:8080', 'V3IO_USERNAME': 'admin', 'V3IO_ACCESS_KEY': '4a5eabdc-0814-489e-9fdf-6ad2fa5df31d', 'V3IO_API': 'v3io-webapi.default-tenant.svc:8081'}, 'config': {'spec.triggers.http': {'kind': 'http', 'maxWorkers': 8, 'attributes': {'ingresses': {}}, 'annotations': {}}}, 'build_commands': [], 'base_spec': {'apiVersion': 'nuclio.io/v1', 'kind': 'Function', 'metadata': {'annotations': {'nuclio.io/generated_by': 'function generated at 11-12-2019 by admin from step-1-model-serving.ipynb'}, 'labels': {}, 'name': 'step-1-model-serving'}, 'spec': {'build': {'commands': ['pip install kfserving==0.2.0 --upgrade', 'pip install azure', 'pip install numpy', 'pip install lightgbm'], 'functionSourceCode': '', 'noBaseImagesPull': True}, 'env': [], 'handler': 'step-1-model-serving:handler', 'runtime': 'python:3.6', 'volumes': []}}, 'source': '', 'function_kind': 'serving'}}
      - |-
        -s
      - ""
      - |-
        -p
      - |-
        projects
      - |-
        -m
      - |-
        lgbm_v1={{inputs.parameters.train-model-model}}
      "image": |-
        mlrun/mlrun:latest
    "inputs":
      "parameters":
      - "name": |-
          train-model-model
    "name": |-
      deploy-higgs-serving
    "outputs":
      "artifacts":
      - "name": |-
          deploy-higgs-serving-endpoint
        "path": |-
          /tmp/output
  - "dag":
      "tasks":
      - "arguments":
          "parameters":
          - "name": |-
              train-model-model
            "value": |-
              {{tasks.train-model.outputs.parameters.train-model-model}}
        "dependencies":
        - |-
          train-model
        "name": |-
          deploy-higgs-serving
        "template": |-
          deploy-higgs-serving
      - "name": |-
          load-data
        "template": |-
          load-data
      - "arguments":
          "parameters":
          - "name": |-
              learning_rate
            "value": |-
              {{inputs.parameters.learning_rate}}
          - "name": |-
              num_leaves
            "value": |-
              {{inputs.parameters.num_leaves}}
          - "name": |-
              train-model-model
            "value": |-
              {{tasks.train-model.outputs.parameters.train-model-model}}
          - "name": |-
              train-model-xtest
            "value": |-
              {{tasks.train-model.outputs.parameters.train-model-xtest}}
          - "name": |-
              train-model-ytest
            "value": |-
              {{tasks.train-model.outputs.parameters.train-model-ytest}}
        "dependencies":
        - |-
          train-model
        "name": |-
          test-model
        "template": |-
          test-model
      - "arguments":
          "parameters":
          - "name": |-
              load-data-features
            "value": |-
              {{tasks.load-data.outputs.parameters.load-data-features}}
          - "name": |-
              load-data-labels
            "value": |-
              {{tasks.load-data.outputs.parameters.load-data-labels}}
        "dependencies":
        - |-
          load-data
        "name": |-
          train-model
        "template": |-
          train-model
    "inputs":
      "parameters":
      - "name": |-
          learning_rate
      - "name": |-
          num_leaves
    "name": |-
      lgbmclassifier-training-pipeline
  - "container":
      "command":
      - |-
        python
      - |-
        -m
      - |-
        mlrun
      - |-
        run
      - |-
        --kfp
      - |-
        --from-env
      - |-
        --workflow
      - |-
        {{workflow.uid}}
      - |-
        --name
      - |-
        load_data
      - |-
        -p
      - |-
        target=
      - |-
        -p
      - |-
        randstate=1
      - |-
        -o
      - |-
        features
      - |-
        -o
      - |-
        labels
      - |-
        --handler
      - |-
        load
      - |-
        --runtime
      - |-
        {'kind': 'job', 'metadata': {'name': 'step-2---kfp-pipeline'}, 'spec': {'command': '', 'args': [], 'image': 'docker-registry.default-tenant.app.yjb-3.iguazio-cd2.com:80/mlrun/mlrunlgb:latest', 'mode': '', 'volumes': [{'flexVolume': {'driver': 'v3io/fuse', 'options': {'accessKey': '4a5eabdc-0814-489e-9fdf-6ad2fa5df31d', 'container': 'users', 'subPath': '/admin'}}, 'name': 'v3io'}], 'volume_mounts': [{'mountPath': '/User', 'name': 'v3io'}], 'env': [{'name': 'V3IO_API', 'value': 'v3io-webapi.default-tenant.svc:8081'}, {'name': 'V3IO_USERNAME', 'value': 'admin'}, {'name': 'V3IO_ACCESS_KEY', 'value': '4a5eabdc-0814-489e-9fdf-6ad2fa5df31d'}], 'description': '', 'build': {'functionSourceCode': '', 'image': 'mlrun/mlrunlgb:latest', 'base_image': 'python:3.6-jessie', 'commands': ['pip install -U matplotlib sklearn lightgbm kfp', 'pip install mlrun']}}}
      - ""
      "env":
      - "name": |-
          V3IO_API
        "value": |-
          v3io-webapi.default-tenant.svc:8081
      - "name": |-
          V3IO_USERNAME
        "value": |-
          admin
      - "name": |-
          V3IO_ACCESS_KEY
        "value": |-
          4a5eabdc-0814-489e-9fdf-6ad2fa5df31d
      "image": |-
        mlrun/mlrun:latest
      "volumeMounts":
      - "mountPath": |-
          /User
        "name": |-
          v3io
    "name": |-
      load-data
    "outputs":
      "artifacts":
      - "name": |-
          mlpipeline-ui-metadata
        "path": |-
          /mlpipeline-ui-metadata.json
      - "name": |-
          mlpipeline-metrics
        "path": |-
          /mlpipeline-metrics.json
      - "name": |-
          load-data-features
        "path": |-
          /tmp/features
      - "name": |-
          load-data-labels
        "path": |-
          /tmp/labels
      "parameters":
      - "name": |-
          load-data-features
        "valueFrom":
          "path": |-
            /tmp/features
      - "name": |-
          load-data-labels
        "valueFrom":
          "path": |-
            /tmp/labels
    "volumes":
    - "flexVolume":
        "driver": |-
          v3io/fuse
        "options":
          "accessKey": |-
            4a5eabdc-0814-489e-9fdf-6ad2fa5df31d
          "container": |-
            users
          "subPath": |-
            /admin
      "name": |-
        v3io
  - "container":
      "command":
      - |-
        python
      - |-
        -m
      - |-
        mlrun
      - |-
        run
      - |-
        --kfp
      - |-
        --from-env
      - |-
        --workflow
      - |-
        {{workflow.uid}}
      - |-
        --name
      - |-
        test_model
      - |-
        -p
      - |-
        target=
      - |-
        -x
      - |-
        learning_rate={{inputs.parameters.learning_rate}}
      - |-
        -x
      - |-
        num_leaves={{inputs.parameters.num_leaves}}
      - |-
        -i
      - |-
        model={{inputs.parameters.train-model-model}}
      - |-
        -i
      - |-
        xtest={{inputs.parameters.train-model-xtest}}
      - |-
        -i
      - |-
        ytest={{inputs.parameters.train-model-ytest}}
      - |-
        -o
      - |-
        iteration_results
      - |-
        --handler
      - |-
        test
      - |-
        --runtime
      - |-
        {'kind': 'job', 'metadata': {'name': 'step-2---kfp-pipeline'}, 'spec': {'command': '', 'args': [], 'image': 'docker-registry.default-tenant.app.yjb-3.iguazio-cd2.com:80/mlrun/mlrunlgb:latest', 'mode': '', 'volumes': [{'flexVolume': {'driver': 'v3io/fuse', 'options': {'accessKey': '4a5eabdc-0814-489e-9fdf-6ad2fa5df31d', 'container': 'users', 'subPath': '/admin'}}, 'name': 'v3io'}], 'volume_mounts': [{'mountPath': '/User', 'name': 'v3io'}], 'env': [{'name': 'V3IO_API', 'value': 'v3io-webapi.default-tenant.svc:8081'}, {'name': 'V3IO_USERNAME', 'value': 'admin'}, {'name': 'V3IO_ACCESS_KEY', 'value': '4a5eabdc-0814-489e-9fdf-6ad2fa5df31d'}], 'description': '', 'build': {'functionSourceCode': '', 'image': 'mlrun/mlrunlgb:latest', 'base_image': 'python:3.6-jessie', 'commands': ['pip install -U matplotlib sklearn lightgbm kfp', 'pip install mlrun']}}}
      - |-
        --selector
      - |-
        max.accuracy
      - ""
      "env":
      - "name": |-
          V3IO_API
        "value": |-
          v3io-webapi.default-tenant.svc:8081
      - "name": |-
          V3IO_USERNAME
        "value": |-
          admin
      - "name": |-
          V3IO_ACCESS_KEY
        "value": |-
          4a5eabdc-0814-489e-9fdf-6ad2fa5df31d
      "image": |-
        mlrun/mlrun:latest
      "volumeMounts":
      - "mountPath": |-
          /User
        "name": |-
          v3io
    "inputs":
      "parameters":
      - "name": |-
          learning_rate
      - "name": |-
          num_leaves
      - "name": |-
          train-model-model
      - "name": |-
          train-model-xtest
      - "name": |-
          train-model-ytest
    "name": |-
      test-model
    "outputs":
      "artifacts":
      - "name": |-
          mlpipeline-ui-metadata
        "path": |-
          /mlpipeline-ui-metadata.json
      - "name": |-
          mlpipeline-metrics
        "path": |-
          /mlpipeline-metrics.json
      - "name": |-
          test-model-iteration_results
        "path": |-
          /tmp/iteration_results
    "volumes":
    - "flexVolume":
        "driver": |-
          v3io/fuse
        "options":
          "accessKey": |-
            4a5eabdc-0814-489e-9fdf-6ad2fa5df31d
          "container": |-
            users
          "subPath": |-
            /admin
      "name": |-
        v3io
  - "container":
      "command":
      - |-
        python
      - |-
        -m
      - |-
        mlrun
      - |-
        run
      - |-
        --kfp
      - |-
        --from-env
      - |-
        --workflow
      - |-
        {{workflow.uid}}
      - |-
        --name
      - |-
        train_model
      - |-
        -p
      - |-
        target=
      - |-
        -i
      - |-
        features={{inputs.parameters.load-data-features}}
      - |-
        -i
      - |-
        labels={{inputs.parameters.load-data-labels}}
      - |-
        -o
      - |-
        model
      - |-
        -o
      - |-
        xtest
      - |-
        -o
      - |-
        ytest
      - |-
        --handler
      - |-
        train
      - |-
        --runtime
      - |-
        {'kind': 'job', 'metadata': {'name': 'step-2---kfp-pipeline'}, 'spec': {'command': '', 'args': [], 'image': 'docker-registry.default-tenant.app.yjb-3.iguazio-cd2.com:80/mlrun/mlrunlgb:latest', 'mode': '', 'volumes': [{'flexVolume': {'driver': 'v3io/fuse', 'options': {'accessKey': '4a5eabdc-0814-489e-9fdf-6ad2fa5df31d', 'container': 'users', 'subPath': '/admin'}}, 'name': 'v3io'}], 'volume_mounts': [{'mountPath': '/User', 'name': 'v3io'}], 'env': [{'name': 'V3IO_API', 'value': 'v3io-webapi.default-tenant.svc:8081'}, {'name': 'V3IO_USERNAME', 'value': 'admin'}, {'name': 'V3IO_ACCESS_KEY', 'value': '4a5eabdc-0814-489e-9fdf-6ad2fa5df31d'}], 'description': '', 'build': {'functionSourceCode': '', 'image': 'mlrun/mlrunlgb:latest', 'base_image': 'python:3.6-jessie', 'commands': ['pip install -U matplotlib sklearn lightgbm kfp', 'pip install mlrun']}}}
      - ""
      "env":
      - "name": |-
          V3IO_API
        "value": |-
          v3io-webapi.default-tenant.svc:8081
      - "name": |-
          V3IO_USERNAME
        "value": |-
          admin
      - "name": |-
          V3IO_ACCESS_KEY
        "value": |-
          4a5eabdc-0814-489e-9fdf-6ad2fa5df31d
      "image": |-
        mlrun/mlrun:latest
      "volumeMounts":
      - "mountPath": |-
          /User
        "name": |-
          v3io
    "inputs":
      "parameters":
      - "name": |-
          load-data-features
      - "name": |-
          load-data-labels
    "name": |-
      train-model
    "outputs":
      "artifacts":
      - "name": |-
          mlpipeline-ui-metadata
        "path": |-
          /mlpipeline-ui-metadata.json
      - "name": |-
          mlpipeline-metrics
        "path": |-
          /mlpipeline-metrics.json
      - "name": |-
          train-model-model
        "path": |-
          /tmp/model
      - "name": |-
          train-model-xtest
        "path": |-
          /tmp/xtest
      - "name": |-
          train-model-ytest
        "path": |-
          /tmp/ytest
      "parameters":
      - "name": |-
          train-model-model
        "valueFrom":
          "path": |-
            /tmp/model
      - "name": |-
          train-model-xtest
        "valueFrom":
          "path": |-
            /tmp/xtest
      - "name": |-
          train-model-ytest
        "valueFrom":
          "path": |-
            /tmp/ytest
    "volumes":
    - "flexVolume":
        "driver": |-
          v3io/fuse
        "options":
          "accessKey": |-
            4a5eabdc-0814-489e-9fdf-6ad2fa5df31d
          "container": |-
            users
          "subPath": |-
            /admin
      "name": |-
        v3io
